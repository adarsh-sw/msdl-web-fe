trigger:
  - main

resources:
  - repo: self

variables:
  ${{ if eq( variables['Build.SourceBranchName'], 'main' ) }}:
    isProd: "true"
  ${{ else }}:
    isProd: "false"

  dockerRegistryServiceConnection: '62fa8160-26b8-4a68-8f88-c6e3c40a6af9'
  imageRepository: 'socialwell/msdl-docs-fe-$(Build.SourceBranchName)'
  containerRegistry: 'socialwellacrdev.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'socialwellacrdev14156294-auth'

  vmImageName: "ubuntu-latest"

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - publish: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
    - deployment: Deploy
      displayName: Deploy
      pool:
        vmImage: $(vmImageName)
      environment: "aks-$(Build.SourceBranchName).default"
      strategy:
        runOnce:
          deploy:
            steps:
              - task: KubernetesManifest@0
                displayName: Create imagePullSecret
                inputs:
                  action: createSecret
                  secretName: $(imagePullSecret)
                  dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

              - task: KubernetesManifest@0
                displayName: Deploy to Kubernetes cluster
                inputs:
                  action: deploy
                  manifests: |
                    $(Pipeline.Workspace)/manifests/deployment.yml
                    $(Pipeline.Workspace)/manifests/service.yml
                  imagePullSecrets: |
                    $(imagePullSecret)
                  containers: |
                    $(containerRegistry)/$(imageRepository):$(tag)

